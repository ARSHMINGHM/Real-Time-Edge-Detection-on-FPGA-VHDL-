// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _SaveToRamAndOutput_HH_
#define _SaveToRamAndOutput_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "SaveToRamAndOutpubkb.h"

namespace ap_rtl {

struct SaveToRamAndOutput : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > input_image_dout;
    sc_in< sc_logic > input_image_empty_n;
    sc_out< sc_logic > input_image_read;
    sc_out< sc_lv<17> > output_image_address0;
    sc_out< sc_logic > output_image_ce0;
    sc_out< sc_logic > output_image_we0;
    sc_out< sc_lv<8> > output_image_d0;


    // Module declarations
    SaveToRamAndOutput(sc_module_name name);
    SC_HAS_PROCESS(SaveToRamAndOutput);

    ~SaveToRamAndOutput();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    SaveToRamAndOutpubkb<1,1,9,10,9,18>* SaveToRamAndOutpubkb_U1;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<17> > indvar_flatten_reg_72;
    sc_signal< sc_lv<9> > i_0_reg_83;
    sc_signal< sc_lv<9> > j_0_reg_94;
    sc_signal< sc_lv<1> > icmp_ln28_fu_105_p2;
    sc_signal< sc_lv<1> > icmp_ln28_reg_170;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<17> > add_ln28_fu_111_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<9> > select_ln47_fu_129_p3;
    sc_signal< sc_lv<9> > select_ln47_reg_179;
    sc_signal< sc_lv<9> > select_ln47_1_fu_137_p3;
    sc_signal< sc_lv<9> > select_ln47_1_reg_184;
    sc_signal< sc_lv<9> > j_fu_145_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<9> > ap_phi_mux_i_0_phi_fu_87_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > sext_ln47_fu_157_p1;
    sc_signal< sc_lv<1> > icmp_ln29_fu_123_p2;
    sc_signal< sc_lv<9> > i_fu_117_p2;
    sc_signal< sc_lv<18> > grp_fu_161_p3;
    sc_signal< sc_lv<9> > grp_fu_161_p0;
    sc_signal< sc_lv<10> > grp_fu_161_p1;
    sc_signal< sc_lv<9> > grp_fu_161_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<18> > grp_fu_161_p00;
    sc_signal< sc_lv<18> > grp_fu_161_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<17> ap_const_lv17_19D07;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_173;
    static const sc_lv<18> ap_const_lv18_173;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln28_fu_111_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_87_p4();
    void thread_ap_ready();
    void thread_grp_fu_161_p0();
    void thread_grp_fu_161_p00();
    void thread_grp_fu_161_p1();
    void thread_grp_fu_161_p2();
    void thread_grp_fu_161_p20();
    void thread_i_fu_117_p2();
    void thread_icmp_ln28_fu_105_p2();
    void thread_icmp_ln29_fu_123_p2();
    void thread_input_image_read();
    void thread_j_fu_145_p2();
    void thread_output_image_address0();
    void thread_output_image_ce0();
    void thread_output_image_d0();
    void thread_output_image_we0();
    void thread_select_ln47_1_fu_137_p3();
    void thread_select_ln47_fu_129_p3();
    void thread_sext_ln47_fu_157_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
